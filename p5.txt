 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
        La captura se compone 954 paquetes.

 ** ¿Cuánto tiempo dura la captura?
        La captura dura 56,14 segundos.

 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
        La maquina donde se ha efectuado la captura tiene de IP: 192.168.1.34. Se trata de una ip privada, 
        lo sabemos porque pertenece al rango de IPs privadas.


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
        UDP es mayor 96.23% y TCP es 2.10%. Sí es consistente, ya que en aplicaciones del tipo de 
        envio de datos multimedia como la transmision de audio y video que suelen utilizar SIP, 
        lo que se busca es la rápidez en la que llegan los paquetes, y se le da menos importancia 
        a que lleguen todos los bytes del paquete.

 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?¿Cuáles son señal y cuales ruido?
        tenemos como protocolo principal IP Version 4. Dentro de UDP podemos ver los protocolos: 
        Simple Traversal of UDP through NAT(5.1%), SIP(2.6%), RTP(84.6%) y dentro RTCP(0.4%) y DNS(2.9%). 
        Dentro de TCP: HTTP(0.4%) y ICMP(0.6%). Y por último tenemos ARP(1%).

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
        Del segundo 6 al 8, del 13 al 15, del 15 al 17, del 37 al 40 y del 54 al final.

 ** Y los paquetes con RTP, ¿cuándo se envían?
        Del segundo 16 al 22 y del 22 al 38.     


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
        Servicio DNS, para pedir el servidor DNS de una IP o la IP de un nombre DNS.

 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
        La direccion del servidor de nombres Ekiga: 80.58.61.250.

 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
        En el segundo paquete en el campo answers de DNS devuelve la dirección: 86.64.162.35.


6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
        En el paquete8, Full request URI: http://ekiga.net/ip/

 ** ¿Qué user agent (UA) la está pidiendo?
        User-Agent: Ekiga.

 ** ¿Qué devuelve el servidor?
        Devuelve un 200 OK con una linea de texto: 83.36.48.212, en el paquete 10.

 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
        Recibimos una dirección IP. Nos está devolviendo nuestra IP pública: 193.147.77.72.


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura?
        Este protocolo se usa para poder realizar un intercambio de paquetes UDP a 
        través de dispositivos NAT. Nos permite saber nuestra IP pública, tipo de NAT y puerto.

 Busca en la Wikipedia.
 ** ¿Estamos tras un NAT?
        Sí, porque usamos el protocolo STUN.


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
        86.64.162.35

 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
        Sent-by port: 5063

 ** ¿Qué método SIP utiliza el UA para registrarse?
        Method: REGISTER

 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
        El UA entiende: 
        INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
        No, se le devuelve un 401 Unauthorized.

 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
        Debe recibir un 200 OK.

 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
        En el segundo paquete vemos un campo 'Authorization', que no está presente en 
        el anterior, por eso el segundo paquete es más largo.

 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
        Lo vemos en el campo Expires: 3600s.


10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
        Si, esta información la vemos en el campo From.

 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
        Contiene información sobre la sesión SIP. El protocolo es SDP.

 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
        No. En el siguiente mensaje el servidor envia: 407 proxy auhentication required.

 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
        El Length del segundo INVITE es mayor que el el primero, ya que incluye el 
        Proxy-Authorization. Debido al mensaje 407 del servidor.


11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
        RTP y RTP con H.261. 
        RTP es un protocolo para intercambio de datos a tiempo real.
        H.261 es un estándar de compresión de video que lleva RTP por debajo.

 ** ¿Cuál es el tamaño de paquete de los mismos?
        Los paquetes de RTP tienen 214 bytes
        Los paquetes de H.261 tienen un tamaño variable, se envían de dos en dos, las dos primeras 
    parejas tienen más de 1000 bytes cada una, para el resto de paquetes el primero tendrá siempre 
    más de 1000 bytes y el segundo oscilará entre los 200 y los 800 bytes.

 ** ¿Se utilizan bits de padding?
        El bit de padding está a 0 en los paquetes.

 ** ¿Cuál es la periodicidad de los paquetes que se envían?
        Aproximadamente un paquete RTP cada 0,024s.
        Aproximadamente un paquete H.261 cada 0,25.

 ** ¿Cuántos bits/segundo estamos enviando?
        Si omitimos los paquetes H.261, hemos enviando 214 bytes cada 0,024s por lo tanto 71.3 kbits/s.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
        Tenemos 2 flujos. Una para RTP propiamente y otro para H.261.

 ** ¿Cuántos paquetes se pierden?
        No se pierde ningun paquete.

 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
        1290.479 ms en H.261 y 1290.444 ms en RTP. El tiempo entre un paquete y otro.

 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
        RTP --> 119.64 ms de jitter máximo y 42.50 ms de jitter medio.
        H.261 --> 183.1 ms de jitter máximo y 153.24 ms de jitter medio.
        El jitter refleja la latencia máxima y la latencia de media de la comunicación.
        Sí, ya que no se supera un retardo superior a 300ms.


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
        0 ms porque no hay ningún paquete con el que calcularlo en relación.

 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
        Sí, si el valor de la delta es 0.

 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
        Hasta el paquete 246 que tiene el valor de 5.7ms y el 247 de 38.82ms.

 ** ¿A qué se debe el cambio tan brusco del jitter?
        Porque la delta crece mucho, de 24.03ms en el 246 a 554.74ms en el 247, por lo tanto el jitter aumenta.

 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
        El cambio en el jitter depende del cambio en el delta, el incremento del jitter será mayor que el del delta.

 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
        Conforme aumenta el valor de la delta, aumenta el jitter


14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
        21 segundos

 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
        SSRC H.261: 0x43306582.
        SSRC RTP: 0xbf4afdr7.
        Hay un SSRC para cada flujo.
        No hay CSRCs.


15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
        Utiliza el método BYE.

 ** ¿En qué trama(s)?
        En los paquetes 924, 925, 927 y 933.

 ** ¿Por qué crees que se envía varias veces?
        Porque se envía hasta recibir un mensaje 200 OK.


16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
        Para confirmar que se ha cerrado la sesión.

 ** ¿En qué trama sucede esto?
        En el paquete 950.
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
        Se diferencia en el campo Expires, en este caso está a 0 y en la anterior a 3600.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

--------------------------------------------------------------------------------
---- La captutura es igual la mía que la de Alvro Martin, ya que nos a 
     dado problemas y la hemos hecho juntos con mi portatil y un 
     ordenador del aula. -------------------------------------------------------
--------------------------------------------------------------------------------

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
        DNS sí sería necesario usarlo, ya que hay que es la única forma de contactar con el servidor registrar. En el caso de STUN no haría falta, ya que sólo se usa si se está detrás de un router NAT.

 ** ¿Son diferentes el registro y la descripción de la sesión?
        El registro utilizará SIP, mientras que la descripción de la sesión estará en SDP.


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
        Tenemos 4 flujos, dos por cada canal de la conversación, uno de video y otro de audio.

 ** ¿Cuál es su periodicidad?
        0.03s más o menos

 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
        Valor Máx delta: 32,973 ms
        Valor Med jitter: 1.972 ms
        Valor Max jitter: 0.04 ms


 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
        En la pestaña Telephony se escoge VoIP Calls, Play Streams.

 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
        No funciona.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
